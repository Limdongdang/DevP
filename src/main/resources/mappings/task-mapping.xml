<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="TaskDAO">
	<select id="getTask" resultType="Task">
		SELECT *
		FROM task
		WHERE userId = #{userId} AND projectId = #{projectId};
	</select>

	<select id="getMyTask" resultType="Task">
		SELECT *
		FROM task
		WHERE userId = #{userId};
	</select>

	<select id="getTaskList" resultType="Task">
		SELECT t.taskId, t.userId, t.category, t.detail, t.progress, t.startDate, t.endDate, p.projectName
		FROM task t
		JOIN project p
		ON t.projectId = p.projectId
		WHERE t.userId = #{userId};
	</select>
	<!--  모든사람 프로젝트 업무리스트	-->
	<select id="getProjectTaskList" resultType="Task">
		SELECT * FROM task WHERE projectId = #{projectId};
	</select>
	<!--  지난 업무 개수	-->
	<select id="getPastTaskCnt" resultType="int">
		SELECT COUNT(*) FROM task
		WHERE STR_TO_DATE(enddate, '%Y-%m-%d') &lt; #{now}
			AND userId=#{userId}
			AND projectId=#{projectId}
			AND progress!=100;
	</select>
	<!--  진행중인 업무 개수	-->
	<select id="getProgressTaskCnt" resultType="int">
		SELECT COUNT(*) FROM task
		WHERE STR_TO_DATE(startdate, '%Y-%m-%d') &lt;= #{now}
		AND STR_TO_DATE(enddate, '%Y-%m-%d') &gt;= #{now}
		AND userId = #{userId}
		AND projectId = #{projectId}
		AND progress!=100
	</select>
	<!--  완료 업무 개수	-->
	<select id="getCompleteTaskCnt" resultType="int">
		SELECT COUNT(*) FROM task
			WHERE userId=#{userId} AND projectId=#{projectId} AND status = "완료" AND progress = 100;
	</select>

	<!--  해당프로젝트의 본인 업무 가져오기	-->
	<select id="getMyProjectTaskList" resultType="Task">
		SELECT * FROM task WHERE projectId = #{projectId} AND userId = #{userId};
	</select>

	<insert id="insertTask">
		INSERT into task( projectId, category, workPackage, depth, detail, userId, startdate, enddate)
		VALUES (#{projectId},#{category}, #{workPackage},#{depth},#{detail},#{userId},#{startdate}, #{enddate});
	</insert>

	<!--  프로젝트 업무 수정 - 리더	-->
	<update id="updateTaskLeader">
		UPDATE task
		SET category=#{category}, workPackage=#{workPackage}, depth=#{depth}, detail=#{detail}, userId=#{userId},
		startdate=#{startdate}, enddate=#{enddate}, status=#{status},
		progress =
			CASE
				WHEN #{status} = '대기' THEN 0
				WHEN #{status} = '진행중' THEN 50
				WHEN #{status} = '검토' THEN 75
				WHEN #{status} = '완료' THEN 100
				ELSE progress
			END
		WHERE projectId=#{projectId} AND taskId=#{taskId}
	</update>
	<!--  프로젝트 업무 수정	-->
	<update id="updateTaskStatus">
		UPDATE task SET
			status = #{status},
			progress =
			CASE
				WHEN #{status} = '대기' THEN 0
				WHEN #{status} = '진행중' THEN 50
				WHEN #{status} = '검토' THEN 75
			ELSE progress
			END
		WHERE taskId = #{taskId};
	</update>

	<delete id="deleteTask">
		DELETE FROM task WHERE taskId=#{taskId};
	</delete>


	<update id="setMemberProgress">
		UPDATE projectgroup
			SET progress = (
				SELECT AVG(avg_progress) * 100
				FROM (
					SELECT userId, AVG(progress) as avg_progress
					FROM task
					WHERE projectId = projectgroup.projectId
					GROUP BY userId
				) as sub
				WHERE sub.userId = projectgroup.userId
				)
			WHERE EXISTS (
				SELECT 1
				FROM task
				WHERE projectId = projectgroup.projectId
			);
	</update>

</mapper>