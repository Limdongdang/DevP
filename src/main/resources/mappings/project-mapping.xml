<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="ProjectDAO">

    <!--  프로젝트 추가   -->
    <insert id="insertProject">
        insert into project (projectName, startDate, endDate, progress, script, leader)
        values (#{projectName}, #{startDate}, #{endDate}, #{progress}, #{script}, #{leader});
    </insert>
    <!--  프로젝트 목록전체   -->
    <select id="getProjectList" resultType="ProjectList">
        select g.userId, p.projectId, p.projectName, p.progress AS projectProgress, g.position, g.role, g.progress AS memberProgress
        from projectgroup g
        join project p
        on g.projectId = p.projectId
        where g.userId = #{userId} AND g.status != x;
    </select>
    <!--  진행 중인 프로젝트 목록   -->
    <select id="getOnGoingProjectList" resultType="ProjectList">
        select g.userId, p.projectId, p.projectName, p.progress AS projectProgress, g.position, g.role, g.progress AS memberProgress
        from projectgroup g
        join project p
        on g.projectId = p.projectId
        where g.userId = #{userId} AND p.status = "진행중";
    </select>
    <!--  종료 된 프로젝트 목록   -->
    <select id="getCompleteProjectList" resultType="ProjectList">
        select g.userId, p.projectId, p.projectName, p.progress AS projectProgress, g.position, g.role, g.progress AS memberProgress
        from projectgroup g
        join project p
        on g.projectId = p.projectId
        where g.userId = #{userId} AND p.status = "완료";
    </select>
    <!--  삭제 된 프로젝트 목록   -->
    <select id="getDeleteProjectList" resultType="ProjectList">
        select g.userId, p.projectId, p.projectName, p.progress AS projectProgress, g.position, g.role, g.progress AS memberProgress
        from projectgroup g
        join project p
        on g.projectId = p.projectId
        where g.userId = #{userId} AND p.status = "삭제";
    </select>
    <update id="completeProject">
        UPDATE project SET status="완료"
        WHERE projectId=#{projectId}
    </update>
    <!-- 프로젝트삭제 -->
    <update id="deleteProject">
        UPDATE project SET status="삭제"
        WHERE projectId=#{projectId}
    </update>
    <!--  프로젝트 삭제 사유 추가   -->
    <insert id="insertDeleteProjectReason">
        insert into deleteProject (projectId, reason)
        values (#{projectId},#{reason});
    </insert>
    <!--  프로젝트 아이디   -->
    <select id="getProjectId" resultType="int">
        select projectId from project where projectName = #{projectName};
    </select>
    <select id="getProject" resultType="Project">
        SELECT * FROM project WHERE projectId=#{projectId};
    </select>
    <select id="getProjectName" resultType="String">
        SELECT projectName FROM project WHERE projectId=#{projectId};
    </select>
    <select id="getProjectProgress" resultType="int">
        SELECT progress FROM project WHERE projectId=#{projectId};
    </select>

    <!-- 프로젝트참여멤버리스트 가져오기   -->
    <resultMap id="idAndNameResultMap" type="java.util.Map">
        <result property="idAndName" column="idAndName"/>
    </resultMap>

    <select id="getMemberNames" resultType="String">
        SELECT DISTINCT CONCAT(u.id, ',', u.name) AS idAndName
        FROM user AS u
        JOIN projectgroup AS pg
        ON pg.userId = u.id
        WHERE pg.projectId = #{projectId}
    </select>
</mapper>